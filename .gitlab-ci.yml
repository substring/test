image: archlinux/base:latest

stages:
  - lint
  - prechecks
  - makepkg
  - build_iso
  - release

before_script:
  - pacman-key --init && \
    pacman-key --populate archlinux && \
    pacman -Sy

.build_packages_template: &buildpackages
  script:
    - pacman -Sy --noconfirm --needed mkinitcpio asp base-devel ccache haveged namcap wget sed python-sphinx_rtd_theme
    - sed -i 's/#MAKEFLAGS="-j2"/MAKEFLAGS="-j'$(nproc)'"/' /etc/makepkg.conf
    - sed -ri 's/^BUILDENV=(.*)\!ccache(.*)/BUILDENV=\1ccache\2/' /etc/makepkg.conf
    - mkdir -p work/cache/ccache work/output
    - ln -s "$(pwd)"/work /work
    - cp packages_*.lst buildContainer.sh /work
    - cp -R package /work
    - useradd -ms /bin/bash -d /work build
    - echo 'build ALL=(root) NOPASSWD:ALL' > /etc/sudoers.d/user && chmod 0440 /etc/sudoers.d/user
    - chown -R build:build work /work
    - chmod -R 777 work /work
    - CCACHE_DIR=/work/cache/ccache ccache -s
    - su - build -c "cd /work && MAKEPKG_OPTS=\"$MAKEPKG_OPTS\" ./buildContainer.sh" 2>&1 | tee work/output/build.log
    - CCACHE_DIR=/work/cache/ccache ccache -s
  cache:
    key: one-key-to-rule-them-all
    paths:
      - work/cache
  artifacts:
    paths:
      - work/output
    expire_in: 1 mos

.build_groovyarcade_iso_template: &buildgroovyarcadeiso
  stage: build_iso
  script:
    - echo "Building iso"
    - pacman -Sy --noconfirm --needed archiso mkinitcpio cdrtools wget
    - whoami
    - ./buildGA.sh
  artifacts:
    paths:
      - work/output/*.iso.xz
    expire_in: 1 mos

.branches_but_master: &notmaster
  when: manual
  only:
    - branches
  except:
    - master

.only_master: &onlymasterortags
  only:
    - master
    - tags

bash_lint:
  stage: lint
  allow_failure: true
  <<: *notmaster
  script:
    - paxman -S shellcheck
    - find ./ -name "*.sh" -exec shellcheck -x {}\;

basic_checks:
  stage: prechecks
  <<: *notmaster
  variables:
    MAKEPKG_OPTS: "--nobuild --nodeps"
  <<: *buildpackages
  when: always

build_packages_manual:
  stage: makepkg
  <<: *notmaster
  <<: *buildpackages

build_iso_manual:
  <<: *notmaster
  <<: *buildgroovyarcadeiso

build_packages:
  stage: makepkg
  <<: *onlymasterortags
  <<: *buildpackages

build_iso:
  <<: *onlymasterortags
  <<: *buildgroovyarcadeiso

release_github:
  stage: release
  script:
    - echo "Releasing GroovyArcade"
    - pacman -Sy --noconfirm --needed tar xz grep
    - curl -L https://github.com/aktau/github-release/releases/download/v0.7.2/linux-amd64-github-release.tar.bz2 | tar -jx --strip-components 3 -C /usr/local/bin bin/linux/amd64/github-release
    - ./release.sh
  only:
    - tags
